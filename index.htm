<html>

<head>

<script src="https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@2.0.0/dist/tf.min.js" ></script>

<script>

async function loadM1() {
     const url = 'https://oonawith2o.github.io/ITS365/model_js/model.json';
     const model = await tf.loadLayersModel(url);
     return model;
};

async function loadXOR() {
     const url = 'https://oonawith2o.github.io/ITS365/modelXOR_js/modelXOR.json';
     const model = await tf.loadLayersModel(url);
     return model;
};

async function loadCNN() {
     const url = 'https://oonawith2o.github.io/ITS365/modelCNN_js/modelCNN.json';
     const model = await tf.loadLayersModel(url);
     return model;
};

function predictM1(model) {
    const userInput = document.getElementById('userInput').value;
    const inputTensor = tf.tensor([parseInt(userInput)]);
    
    model.then(model => {
        let result = model.predict(inputTensor);
        result = result.round().dataSync()[0];
        alert(result ? "odd" : "even");
        
    });
};

function predictXOR(model) {
    const userInputX1 = document.getElementById('userInputX1').value;
    const userInputX2 = document.getElementById('userInputX2').value;
    const inputTensor = tf.tensor([[parseInt([userInputX1]), parseInt([userInputX2])]]);
    
    model.then(model => {
        let result = model.predict(inputTensor);
        result = result.round().dataSync()[0];
        alert(result ? "1" : "0");
    });
};

function predictCNN(model) {
    const inputImage = document.getElementById('myimage');
    console.log(inputImage);
    var inputTensor =   tf.browser.fromPixels(inputImage).resizeNearestNeighbor([32, 32]).toFloat().expandDims();
    var normalizedInputTensor = tf.div(inputTensor, 255);
    console.log(normalizedInputTensor.dataSync());

    model.then(model => {   
        let result = model.predict([normalizedInputTensor]); 
        var arrayResult = tf.squeeze(result, axis=0).dataSync();
        console.log(arrayResult)
        const CLASSES = ["badminton", "basketball", "boxing", "football", "formula1", "gymnastics", "ice_hockey", "swimming", "tennis", "weight_lifting"];
        alert("The uploaded images matches the following class: " + CLASSES[arrayResult.indexOf(Math.max.apply(Math, arrayResult))]);
    }); 
};

function onFileSelected(event) {
  var selectedFile = event.target.files[0];
  var reader = new FileReader();

  var imgtag = document.getElementById("myimage");
  imgtag.title = selectedFile.name;

  reader.onload = function(event) {
    imgtag.src = event.target.result;
  };

  reader.readAsDataURL(selectedFile);
}

const modelM1 = loadM1();
const modelXOR = loadXOR();
const modelCNN = loadCNN();

</script>
</head>

<body>
<h3>  ML Even&Odd Problem </h3>

<input id="userInput" type="text">  </input>
<button onclick="predictM1(modelM1)">Predict</button>

<p> </p>
<hr>

<h3> ML XOR Problem </h3>
<input id="userInputX1" type="text">  </input>
<input id="userInputX2" type="text">  </input>
<button onclick="predictXOR(modelXOR)">Predict</button>

<p> </p>
<hr>

<h3> ML CNN Problem </h3>
<p> Please upload a picture of any of the follwing 10 sports: Badminton, Basketball, Boxing, Football, Formula1, Gymnastics, Ice Hockey, Swimming, Tennis, and Weight Lifting.</p>
<img id="myimage" height="200"> <br>
<label for="userInputImg"> Choose a picture (.jpg): </label>
<input type="file" id="userInputImg" name="img" accept="image/jpeg" onchange="onFileSelected(event)">>
<button onclick="predictCNN(modelCNN)">Predict</button>

<p> </p>
<hr>

</body>

</html>