<html>

<head>

<script src="https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@2.0.0/dist/tf.min.js" ></script>

<script>

async function loadM1() {
     const url = 'https://oonawith2o.github.io/ITS365/model_js/model.json';
     const model = await tf.loadLayersModel(url);
     return model;
};

async function loadXOR() {
     const url = 'https://oonawith2o.github.io/ITS365/modelXOR_js/modelXOR.json';
     const model = await tf.loadLayersModel(url);
     return model;
};

async function loadCNN() {
     const url = 'https://oonawith2o.github.io/ITS365/modelCNN_js/modelCNN.json';
     const model = await tf.loadLayersModel(url);
     return model;
};

function predictM1(model) {
    const userInput = document.getElementById('userInput').value;
    const inputTensor = tf.tensor([parseInt(userInput)]);
    
    model.then(model => {
        let result = model.predict(inputTensor);
        result = result.round().dataSync()[0];
        alert(result ? "odd" : "even");
        
    });
};

function predictXOR(model) {
    const userInputX1 = document.getElementById('userInputX1').value;
    const userInputX2 = document.getElementById('userInputX2').value;
    const inputTensor = tf.tensor([[parseInt([userInputX1]), parseInt([userInputX2])]]);
    
    model.then(model => {
        let result = model.predict(inputTensor);
        result = result.round().dataSync()[0];
        alert(result ? "1" : "0");
    });
};

function predictCNN(model) {
    const userInputImg = document.getElementById('userInputImg').data();
    const inputTensor =   tf.browser.fromPixels(userInputImg).resizeNearestNeighbor([32, 32]).toFloat();
    
    model.then(model => {
        let result = model.predict(inputTensor).data();
        const CLASSES = ["badminton", "basketball", "boxing", "football", "formula1", "gymnastics", "ice_hockey", "swimming", "tennis", "weight_lifting"];
        result_idx = np.argmax(result, axis = -1);
        alert(CLASSES[result_idx]);
    });
};

const modelM1 = loadM1();
const modelXOR = loadXOR();
const modelCNN = loadCNN();

</script>
</head>

<body>
<h3>  ML Even&Odd Problem </h3>

<input id="userInput" type="text">  </input>
<button onclick="predictM1(modelM1)">Predict</button>

<p> </p>
<hr>

<h3> ML XOR Problem </h3>
<input id="userInputX1" type="text">  </input>
<input id="userInputX2" type="text">  </input>
<button onclick="predictXOR(modelXOR)">Predict</button>

<p> </p>
<hr>

<h3> ML CNN Problem </h3>
<label for="userInputImg"> Choose a picture (.jpg): </label>
<input id="userInputImg" name="userInputImg" type="file" accept="image/jpeg"> </input>
<button onclick="predictCNN(modelCNN)">Predict</button>

<p> </p>
<hr>

</body>

</html>